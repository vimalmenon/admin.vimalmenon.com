# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Quality check

on:
  push:
  pull_request:
    branches: [ develop ]

env:
  NODE_VERSION: 17.x
  TF_VAR_access_key: ${{secrets.ACCESS_KEY}}
  TF_VAR_secret_key: ${{secrets.SECRET_KEY}}
  TF_VAR_region: 'us-east-1'

jobs:
  Validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
    - name: Terraform
      uses: hashicorp/setup-terraform@v1.3.2
    - name: Init
      working-directory: ./terraform
      run: terraform init
    - name: Format
      working-directory: ./terraform
      run: terraform fmt -check
    - name: Validate
      working-directory: ./terraform
      run: terraform validate -no-color

  Install:
    name: Install
    runs-on: ubuntu-latest
    needs: Validate
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
    - name: Use Node.js ${{env.NODE_VERSION}}
      uses: actions/setup-node@v2
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci --ignore-scripts

  Check:
    name: Check
    runs-on: ubuntu-latest
    needs: Install
    if: needs.install.result == 'success'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - name: Lint
      run: npm run lint
    - name: Type Checking
      run: npm run tsc
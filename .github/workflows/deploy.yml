# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy

on:
  workflow_dispatch:
    inputs:
      Release:
        description: 'Select a release'
        type: choice
        required: true
        default: 'Patch' 
        options:
          - Patch
          - Minor
          - Major
      Region:
        description: 'Select region'
        type: choice
        required: true
        default: 'ap-southeast-1' 
        options:
          - ap-southeast-1
          - ap-southeast-2
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2

env:
  NODE_VERSION: 17.x
  TF_VAR_region: 'us-east-1'
  AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}

jobs:
  Validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
    - name: Terraform
      uses: hashicorp/setup-terraform@v1.3.2
    - name: Init
      working-directory: ./terraform
      run: terraform init
    - name: Format
      working-directory: ./terraform
      run: terraform fmt -check
    - name: Validate
      working-directory: ./terraform
      run: terraform validate -no-color
  Build:
    name: Build code
    runs-on: ubuntu-latest
    needs: Validate
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
    - name: Use Node.js ${{env.NODE_VERSION}}
      uses: actions/setup-node@v2
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci --ignore-scripts
    - name: Build
      run: npm run build
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.SECRET_KEY}}
        aws-region: ${{env.TF_VAR_region}}